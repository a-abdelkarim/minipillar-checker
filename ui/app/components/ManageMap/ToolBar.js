import React, { Component } from "react";

import AppContext from "../../contexts/AppContext";

class ToolBar extends Component {
  state = {
    item: {},
    errors: {},
    icons: [],
    control: "map",
    user: JSON.parse(localStorage.getItem("user")),
  };

  activeControl = (control, fetch) => {
    this.setState({
      control: control,
    });
    if (fetch) {
      this.props.refresh();
    }
    // this.context.state.activeInteraction(["select"]);
  };

  componentDidMount() {
    if (
      JSON.parse(localStorage.getItem("user")).first_name !==
      this.state.user.first_name
    ) {
      this.setState({
        user: JSON.parse(localStorage.getItem("user")),
      });
    }
  }

  backToZoom = () => {};
  render() {
    return (
      <div className="absolute z-20 top-0  h-full bg-blue-600 w-18">
        <div className=" text-xs text-center text-white font-bold overflow-hidden  ">
          <div
            onClick={() => {
              this.activeControl("map", true);
              this.backToZoom();
            }}
            className={` ${
              this.state.control === "map" ? "bg-blue-800" : null
            } hover:bg-blue-800 h-15 block cursor-pointer py-2 text-xxs`}
          >
            <svg className="toolbarIcon cursor-pointer" viewBox="0 0  91 91">
              <g>
                <path d="M8.79,71.432c8.17,11.569,21.635,19.146,36.846,19.146c24.863,0,45.092-20.229,45.092-45.094   c0-24.863-20.229-45.09-45.092-45.09c-24.865,0-45.094,20.228-45.094,45.09c0,9.482,2.949,18.284,7.967,25.553   C8.589,71.178,8.683,71.309,8.79,71.432z M60.688,82.607c-0.016,0-0.029-0.004-0.043-0.004c-4.4,0-5.492-0.877-6.553-1.73   c-0.83-0.663-1.33-1.611-1.219-2.311c0.094-0.588,0.605-1.312,1.146-2.078c0.158-0.221,0.314-0.442,0.465-0.666   c2.094-3.091,3.293-6.842,3.379-10.563c0.012-0.495-0.125-0.982-0.389-1.402c-2.998-4.731-8.74-2.543-13.35-0.784   c-2.248,0.856-4.691,1.788-6.559,1.905c0.162-0.15,0.33-0.301,0.498-0.454c1.672-1.509,3.752-3.386,3.643-6.425   c-0.113-2.998-2.49-6.359-5.852-6.584c-5.221-0.354-7.48-1.877-7.828-3.074c-0.107-0.37-0.027-0.676,0.07-0.863   c2.91,0.902,8.25,2.33,11.4-1.421c2.391-2.829,2.059-7.024-0.91-11.513l-0.203-0.306c-1.408-2.12-2.863-4.313-2.352-6.003   c0.305-1.005,1.387-1.933,2.293-2.626c2.332-1.78,4.914-3.186,7.674-4.179l0.213-0.077c3.496-1.255,8.779-3.152,9.166-8.173   c0.209-2.744-1.297-4.869-2.506-6.577C52.706,6.462,52.544,6.23,52.386,6c5.949,1.014,11.453,3.342,16.205,6.677l-8.727,12.241   c-2.191,3.07-2.32,6.001-0.344,7.843c0.984,0.917,2.178,1.168,2.828,1.306c1.664,0.344,3.383,0.53,5.193,0.553   c0.092,0.001,0.205,0.003,0.311,0.006c0.035,0.14,0.074,0.354,0.098,0.671c0.152,2.115-0.115,4.293-0.775,6.3   c-0.271,0.823-0.098,1.729,0.457,2.395c1.428,1.71,4.053,1.962,6.375,0.618c0.281-0.161,0.559-0.339,0.836-0.518   c0.35-0.225,0.934-0.602,1.123-0.609c0.227,0.031,1.02,0.605,1.438,0.935c1.076,0.853,2.551,2.019,4.555,2.031   c0.012,0.001,0.021,0.001,0.033,0.001c1.34-0.001,2.625-0.557,3.695-1.523c0.004,0.188,0.016,0.371,0.016,0.559   C85.702,62.256,75.341,76.644,60.688,82.607z M84.583,36.106c-0.488,0.906-0.791,1.829-1.057,2.646   c-0.182,0.563-0.354,1.096-0.559,1.541c-0.365,0.785-0.852,1.131-0.977,1.131l0,0c-0.275-0.002-0.994-0.571-1.469-0.947   c-1.117-0.884-2.621-2.094-4.748-2.015c-1.188,0.045-2.168,0.504-2.959,0.972c0.207-1.483,0.256-2.989,0.146-4.506   c-0.176-2.334-1.047-3.935-2.586-4.758c-1.029-0.552-2.078-0.565-2.855-0.575c-1.404-0.019-2.803-0.169-4.145-0.447   c-0.047-0.01-0.09-0.019-0.127-0.027c0.109-0.304,0.326-0.751,0.707-1.285l8.572-12.024C78.392,21.13,82.669,28.163,84.583,36.106z    M45.636,5.419c0.285,0,0.568,0.016,0.854,0.021c0.49,1.622,1.434,2.962,2.283,4.162c0.896,1.264,1.668,2.355,1.598,3.289   c-0.137,1.774-3.307,2.913-5.854,3.827L44.3,16.797c-3.244,1.167-6.281,2.82-9.025,4.915c-1.506,1.153-3.328,2.783-4.049,5.162   c-1.199,3.957,1.115,7.44,2.973,10.24l0.199,0.3c1.197,1.809,2.246,4.333,1.258,5.502c-1.035,1.232-3.873,0.551-6.506-0.277   c-1.598-0.507-3.367,0.014-4.619,1.355c-1.564,1.68-2.01,4.197-1.133,6.416c0.98,2.482,3.881,5.557,12.121,6.115   c0.396,0.026,1.137,0.923,1.168,1.755c0.023,0.646-0.771,1.413-1.988,2.511c-1.344,1.213-2.867,2.588-3.545,4.646   c-0.309,0.938-0.041,1.971,0.688,2.638c3.893,3.569,9.537,1.419,14.074-0.311c3.158-1.204,5.725-2.095,6.863-1.599   C52.546,68.59,51.69,70.983,50.327,73c-0.133,0.194-0.27,0.389-0.408,0.582c-0.771,1.09-1.73,2.447-2.008,4.191   c-0.402,2.512,0.766,5.203,3.039,7.02c0.143,0.115,0.287,0.229,0.436,0.341c-1.879,0.271-3.799,0.419-5.75,0.419   c-13.305,0-25.109-6.524-32.4-16.535c0.227-4.272,2.242-7.204,3.9-9.572l0.229-0.326c0.523-0.755,1.217-1.928,1.191-3.41   c-0.037-1.693-0.971-2.878-1.652-3.743c-0.129-0.164-0.258-0.327-0.375-0.489c-1.641-2.313-0.514-5.91,1.379-8.119l0.176-0.205   c0.873-1.006,2.193-2.526,2.037-4.634c-0.131-1.953-1.529-3.662-3.57-4.358c-1.445-0.487-2.896-0.384-4.117-0.219   c-1.879,0.248-3.721,0.677-5.52,1.252C11.468,18.073,27.099,5.419,45.636,5.419z M5.829,40.975   c2.322-1.018,4.754-1.721,7.266-2.052c0.656-0.088,1.387-0.157,1.84-0.004c0.029,0.01,0.057,0.021,0.08,0.034   c-0.17,0.267-0.506,0.653-0.727,0.906l-0.195,0.228c-3.209,3.745-4.811,9.859-1.66,14.301c0.166,0.231,0.344,0.46,0.523,0.688   c0.18,0.226,0.434,0.549,0.543,0.743c-0.037,0.081-0.113,0.218-0.26,0.43l-0.221,0.315c-1.098,1.567-2.512,3.59-3.529,6.196   c-2.512-5.233-3.922-11.093-3.922-17.276C5.567,43.959,5.661,42.457,5.829,40.975z" />
              </g>
            </svg>
            <div
              className="mt-1"
              style={{ fontFamily: "sans-serif", fontSize: "0.7rem" }}
            >
              Map
            </div>
          </div>
          <div
            onClick={() => {
              this.activeControl("clear-map", true);
              this.props.clearMap();
            }}
            className={` ${
              this.state.control === "clear-map" ? "bg-blue-800" : null
            } hover:bg-blue-800 h-15 block cursor-pointer py-2 text-xxs`}
          >
            <svg className="toolbarIcon cursor-pointer" viewBox="0 0 512 512">
              <g>
                <g>
                  <circle cx="438.844" cy="94.368" r="15.003" />
                </g>
              </g>
              <g>
                <g>
                  <path d="M491.889,41.329c-28.883-28.883-76.559-26.332-102.17,5.568L243.708,223.735l-9.548-9.548c-29.248-29.248-76.839-29.248-106.086,0l-42.439,42.439c-5.847,5.847-15.362,5.846-21.213-0.005	c-5.864-5.864-5.864-15.353,0-21.217c5.86-5.858,5.86-15.357,0-21.216c-5.857-5.859-15.357-5.859-21.217,0	c-0.017,0.017-0.034,0.034-0.051,0.05l-21.166,21.167c-29.315,29.314-29.32,76.767,0,106.086	c5.043,5.043,119.033,119.033,127.303,127.303c29.314,29.316,76.766,29.32,106.085,0l63.652-63.652	c29.314-29.314,29.321-76.767,0-106.086l-9.547-9.547l176.844-146.013C518.169,117.925,520.817,70.258,491.889,41.329z M234.16,447.579c-17.589,17.588-46.06,17.593-63.652,0l-0.029-0.029c15.546-2.196,30.532-9.257,42.463-21.188	c5.859-5.859,5.859-15.358,0-21.217c-5.857-5.859-15.357-5.859-21.217,0c-17.547,17.548-46.099,17.548-63.647,0.005	l-21.251-21.251c15.546-2.196,30.532-9.256,42.463-21.188c5.859-5.859,5.859-15.358,0-21.217c-5.858-5.86-15.358-5.858-21.217,0	c-17.545,17.546-46.097,17.549-63.647,0.005l-21.222-21.222c-14.599-14.599-16.846-36.334-7.893-53.043	c2.065,3.855,4.712,7.428,7.893,10.608c17.55,17.547,46.102,17.548,63.648,0.003l31.83-31.83	c1.609,1.609,139.395,139.395,148.521,148.521L234.16,447.579z M306.62,371.515c-16.444-16.444-130.493-130.493-144.901-144.9	c16.726-7.971,37.394-5.041,51.226,8.791c21.401,21.401,64.914,64.915,84.869,84.869	C311.915,334.377,314.467,355.12,306.62,371.515z M467.482,120.146c-0.061,0.048-0.121,0.097-0.181,0.146L288.169,268.196	l-23.147-23.146L412.926,65.916c0.05-0.06,0.099-0.12,0.146-0.18c14.562-18.202,41.421-19.369,57.6-3.19	C486.847,78.722,485.687,105.581,467.482,120.146z" />
                </g>
              </g>
            </svg>
            <div
              className="mt-1"
              style={{ fontFamily: "sans-serif", fontSize: "0.7rem" }}
            >
              Clear Map
            </div>
          </div>
          <div
            onClick={() => {
              this.activeControl("groups", true);
              this.props.clearMap();
              this.props.areaState ? this.props.toggleAreas() : null;
              this.props.deviceState ? this.props.toggleDevices() : null;
              this.props.toggleGroups();
            }}
            className={` ${
              this.state.control === "groups" ? "bg-blue-800" : null
            } hover:bg-blue-800 h-15 block cursor-pointer py-2 text-xxs`}
          >
            <img src="/static/icons/groups.svg" className="toolbarIcon" />
            <div
              className="mt-1"
              style={{ fontFamily: "sans-serif", fontSize: "0.7rem" }}
            >
              Groups
            </div>
          </div>
          <div
            onClick={() => {
              this.activeControl("areas", true);
              this.props.clearMap();
              this.props.deviceState ? this.props.toggleDevices() : null;
              this.props.groupState ? this.props.toggleGroups() : null;
              this.props.toggleAreas();
            }}
            className={` ${
              this.state.control === "areas" ? "bg-blue-800" : null
            } hover:bg-blue-800 h-15 block cursor-pointer py-2 text-xxs`}
          >
            <img src="/static/icons/area.svg" className="toolbarIcon" />
            <div
              className="mt-1"
              style={{ fontFamily: "sans-serif", fontSize: "0.7rem" }}
            >
              Areas
            </div>
          </div>
          <div
            onClick={() => {
              this.activeControl("devices", true);
              this.props.clearMap();
              this.props.groupState ? this.props.toggleGroups() : null;
              this.props.areaState ? this.props.toggleAreas() : null;
              this.props.toggleDevices();
            }}
            className={` ${
              this.state.control === "devices" ? "bg-blue-800" : null
            } hover:bg-blue-800 h-15 block cursor-pointer py-2 text-xxs`}
          >
            <img src="/static/icons/devices.svg" className="toolbarIcon" />
            <div
              className="mt-1"
              style={{ fontFamily: "sans-serif", fontSize: "0.7rem" }}
            >
              Devices
            </div>
          </div>
        </div>
      </div>
    );
  }
}
ToolBar.contextType = AppContext;
export default ToolBar;
